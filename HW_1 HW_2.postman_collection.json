{
	"info": {
		"_postman_id": "c4c8b473-e6bd-42e5-a978-fcd59b3f1a60",
		"name": "HW_1 HW_2",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "New Request",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "New Request",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"This is the first responce from server!\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/first",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"first"
					]
				}
			},
			"response": []
		},
		{
			"name": "EP_1",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/get_method?name=Evageny&age=33",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"get_method"
					],
					"query": [
						{
							"key": "name",
							"value": "Evageny"
						},
						{
							"key": "age",
							"value": "33"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "EP_2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var response_body = JSON.parse(responseBody)\r",
							"\r",
							"    pm.test(\"Your name\", function () {\r",
							"        pm.expect(response_body.name).to.eql(\"Evgeny\");\r",
							"});\r",
							"\r",
							"    pm.test(\"Yuor age\", function (){\r",
							"        pm.expect(response_body.age).to.eql(\"33\")\r",
							"});\r",
							"\r",
							"    pm.test(\"Yuor salary\", function (){\r",
							"        pm.expect(response_body.salary).to.eql(1000)\r",
							"});\r",
							"\r",
							"var request_params = request.data\r",
							"\r",
							"    pm.test(\"Your name\", function () {\r",
							"        pm.expect(request_params.name).to.eql(response_body.name);\r",
							"}); \r",
							"\r",
							"    pm.test(\"Your age\", function () {\r",
							"        pm.expect(request_params.age).to.eql(response_body.age);\r",
							"});\r",
							"\r",
							"    pm.test(\"Your salary\", function () {\r",
							"        pm.expect(parseInt (request_params.salary)).to.eql(response_body.salary);\r",
							" });\r",
							"\r",
							" console.log(\"children=\" + response_body.family.children[0])\r",
							"\r",
							"    pm.test(\"Your params.salary*4\", function () {\r",
							"        pm.expect(response_body.family.u_salary_1_5_year).to.eql(parseInt (request_params.salary)*4);\r",
							" });\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "{{name_1}}",
							"type": "text"
						},
						{
							"key": "age",
							"value": "33",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "1000",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/user_info_3?",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"user_info_3"
					],
					"query": [
						{
							"key": "",
							"value": null
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "EP_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//var jsonData = pm.response.json();\r",
							"\r",
							"//let resp_name = jsonData.age\r",
							"//console.log (\"resp_name=\" , resp_name)\r",
							"\r",
							"//var jsonData = pm.response.json(); //спарсили значения (внесли в переменную)\r",
							"        //pm.test(\"Check age\", function () {\r",
							"        //pm.expect(jsonData.age).to.eql(33); //сравнение переменной age и значения\r",
							"//});\r",
							"//pm.test(\"Check name\", function () {\r",
							"        //pm.expect(jsonData.name).to.eql(\"Evgeny\");\r",
							"//});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/object_info_1?name={{name_1}}&age=33&weight=78",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_1"
					],
					"query": [
						{
							"key": "name",
							"value": "{{name_1}}"
						},
						{
							"key": "age",
							"value": "33"
						},
						{
							"key": "weight",
							"value": "78"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "EP_4",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/object_info_2?name=Evgeny&age=33&salary=1000",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_2"
					],
					"query": [
						{
							"key": "name",
							"value": "Evgeny"
						},
						{
							"key": "age",
							"value": "33"
						},
						{
							"key": "salary",
							"value": "1000"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "EP_5",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () { \r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							" let response_body = JSON.parse(responseBody);\r",
							" //console.log(\"response_body=\" + response_body.name)\r",
							"\r",
							" let req_body = pm.request.url.query.toObject();\r",
							" //console.log(\"response_body=\" + req_body.name)\r",
							"\r",
							"        pm.test(\"Your test name\", function () {\r",
							"            pm.expect(response_body.name).to.eql(req_body.name);\r",
							"});\r",
							"\r",
							"        pm.test(\"Your test age\", function () {\r",
							"            pm.expect(response_body.age).to.eql(req_body.age);\r",
							"        });\r",
							"\r",
							"        pm.test(\"Your test salary\", function () {\r",
							"            pm.expect(response_body.salary).to.eql(parseInt(req_body.salary));\r",
							"        });\r",
							"\r",
							" console.log(\"children=\" + response_body.family.children[1])\r",
							"       \r",
							"        pm.test(\"Have DOG_name\", function () {\r",
							"            pm.expect(response_body.family.pets.dog).to.have.property(\"name\");\r",
							"        });\r",
							"\r",
							"         pm.test(\"Have DOG_age\", function () {\r",
							"            pm.expect(response_body.family.pets.dog).to.have.property(\"age\");\r",
							"        });\r",
							"\r",
							"        pm.test(\"Luky\", function () {\r",
							"            pm.expect(response_body.family.pets.dog.name).to.eql(\"Luky\");\r",
							"        });\r",
							"\r",
							"        pm.test(\"Age\", function () {\r",
							"            pm.expect(response_body.family.pets.dog.age).to.eql(4);\r",
							"        });\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/object_info_3?name=Evgeny&age=33&salary=1000",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_3"
					],
					"query": [
						{
							"key": "name",
							"value": "Evgeny"
						},
						{
							"key": "age",
							"value": "33"
						},
						{
							"key": "salary",
							"value": "1000"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "EP_6",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"let json_resp = JSON.parse(responseBody) //спарсили response\r",
							"\r",
							"let req_body = pm.request.url.query.toObject(); // спарсили request\r",
							"\r",
							"    pm.test(\"Your test name\", function () {\r",
							"        pm.expect(json_resp.name).to.eql(req_body.name);\r",
							"});\r",
							"\r",
							"    pm.test(\"Your test age\", function () {\r",
							"        pm.expect(json_resp.age).to.eql(parseInt (req_body.age));\r",
							"});\r",
							"\r",
							"console.log(\"Salary=\" + req_body.salary)\r",
							"\r",
							"console.log(\"Salary=\" + json_resp.salary)\r",
							"\r",
							"console.log(\"Salary=\" + json_resp.salary[1])\r",
							"\r",
							"console.log(\"Salary=\" + json_resp.salary[2])\r",
							"\r",
							"    pm.test(\"Salary_0\", function () {\r",
							"        pm.expect(json_resp.salary[0]).to.eql(parseInt (req_body.salary));\r",
							"});\r",
							"\r",
							"    pm.test(\"Salary_1\", function () {\r",
							"        pm.expect(parseInt (json_resp.salary[1])).to.eql(parseInt (req_body.salary)*2);\r",
							"});\r",
							"\r",
							"    pm.test(\"Salary_2\", function () {\r",
							"        pm.expect(parseInt (json_resp.salary[2])).to.eql(parseInt (req_body.salary)*3);\r",
							"});\r",
							"\r",
							"pm.environment.set(\"name_1\", json_resp.name); // отправка переменной в окружение\r",
							"\r",
							"pm.environment.set(\"age\", json_resp.age);\r",
							"\r",
							"pm.environment.set(\"salary\", json_resp.salary[0]);\r",
							"\r",
							"let arr = json_resp.salary //выводит элементы из массива по порядку\r",
							"for (let i = 0; i <= arr.length \r",
							"\t- 1; i++) { \r",
							"\tconsole.log(arr[i]);\r",
							"}\r",
							"\r",
							"\r",
							"\r",
							"//var json_resp = JSON.parse(responseBody) //спарсили\r",
							"// var salary = parseInt(json_resp.salary[1]) // перевели из string в integer, можно также + или 1*\r",
							"// var arr_len = salary.length\r",
							"// console.log(\"arr_len=\" + arr_len)\r",
							"// pm.test(\"Your test name\", function () {\r",
							"//     pm.expect(salary).to.eql(3000);\r",
							"// });\r",
							"// pm.environment.set(\"salary_1\", salary);\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/object_info_4?name=Evgeny&age=33&salary=1500",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_4"
					],
					"query": [
						{
							"key": "name",
							"value": "Evgeny"
						},
						{
							"key": "age",
							"value": "33"
						},
						{
							"key": "salary",
							"value": "1500"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "EP_7",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"let json_resp = JSON.parse(responseBody)\r",
							"\r",
							"let request_params = request.data\r",
							"\r",
							"    pm.test(\"Your test start_qa_salary\", function () {\r",
							"        pm.expect(json_resp).to.have.property(\"start_qa_salary\");\r",
							"    });\r",
							"\r",
							"        pm.test(\"Your test qa_salary_after_6_months\", function () {\r",
							"        pm.expect(json_resp).to.have.property(\"qa_salary_after_6_months\");\r",
							"    });\r",
							"\r",
							"        pm.test(\"Your test qa_salary_after_12_months\", function () {\r",
							"        pm.expect(json_resp).to.have.property(\"qa_salary_after_12_months\");\r",
							"    });\r",
							"\r",
							"        pm.test(\"Your test qa_salary_after_1.5_year\", function () {\r",
							"            pm.expect(json_resp).to.have.property(\"qa_salary_after_1.5_year\");\r",
							"    });\r",
							"\r",
							"        pm.test(\"Your test qa_salary_after_3.5_years\", function () {\r",
							"            pm.expect(json_resp).to.have.property(\"qa_salary_after_3.5_years\");\r",
							"    });\r",
							"\r",
							"        pm.test(\"Your test person\", function () {\r",
							"            pm.expect(json_resp).to.have.property(\"person\");\r",
							"    });\r",
							"\r",
							"        pm.test(\"Your test start_qa_salary\", function () {\r",
							"            pm.expect(json_resp.start_qa_salary).to.eql(parseInt(request_params.salary));\r",
							"});\r",
							"\r",
							"        pm.test(\"Your test salary_after_6_months\", function () {\r",
							"            pm.expect(json_resp.qa_salary_after_6_months).to.eql(parseInt(request_params.salary)*2);\r",
							"});\r",
							"\r",
							"        pm.test(\"Your test salary_after_1.5_year\", function () {\r",
							"            pm.expect(json_resp[\"qa_salary_after_1.5_year\"]).to.eql(parseInt(request_params.salary)*3.3);\r",
							"});\r",
							"\r",
							"        pm.test(\"Your test salary_after_3.5_year\", function () {\r",
							"            pm.expect(json_resp[\"qa_salary_after_3.5_years\"]).to.eql(parseInt(request_params.salary)*3.8);\r",
							"});\r",
							"\r",
							"        pm.test(\"Your test Person_1\", function () {\r",
							"            pm.expect(json_resp.person.u_name[1]).to.eql(parseInt(request_params.salary));\r",
							"});\r",
							"\r",
							"        pm.test(\"Your test Person_age\", function () {\r",
							"            pm.expect(json_resp.person.u_age).to.eql(parseInt(request_params.age));\r",
							"});\r",
							"\r",
							"        pm.test(\"Your test Person_u_salary_5_years\", function () {\r",
							"            pm.expect(json_resp.person.u_salary_5_years).to.eql(parseInt(request_params.salary)*4.2);\r",
							"});\r",
							"\r",
							"\r",
							"var arr = json_resp.person\r",
							"for (var i in arr) {\r",
							"  console.log(i + ' ' + arr[i]);\r",
							"}\r",
							" //arr.forEach(element => console.log(element));//выводит каждый элемент массива\r",
							"\r",
							"// let json_resp = JSON.parse(responseBody) \r",
							"\r",
							"// console.log(\"Name=\" + json_resp.person.u_name)\r",
							"\r",
							"// pm.environment.set(\"name_2\", json_resp.person.u_name);\r",
							"\r",
							"// console.log(pm.environment.get(\"name_2\"))\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "{{name_1}}",
							"type": "text"
						},
						{
							"key": "age",
							"value": "{{age}}",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "{{salary}}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/user_info_2?",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"user_info_2"
					],
					"query": [
						{
							"key": "",
							"value": null
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "postman-echo.com/get",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "postman-echo.com/get",
					"host": [
						"postman-echo",
						"com"
					],
					"path": [
						"get"
					]
				}
			},
			"response": []
		}
	]
}